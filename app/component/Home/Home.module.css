.cana > canvas:nth-child(2) {
  display: none;
}
.cana > canvas:nth-child(3) {
  height: 92vh !important;
  background-color: #333 !important;
  position: relative;
}
.cana {
  position: relative;
  min-height: 92vh;
}
.content {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  min-height: 92vh;
}
.content img {
  width: 40%;
  height: 100%;
}
.text {
  width: 55%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 15px;
}
.text h1 {
  font-size: 7rem;
  color: transparent;
  -webkit-text-stroke: 0.03em var(--green);
  /* transform: translateY(90px); */
  /* transition: 0.5s; */
}
.text h3 {
  font-size: 3rem;
  /* transform: translateY(60px); */
  /* transition: 0.5s; */
}
.text p {
  font-size: 1.3rem;
  letter-spacing: 2px;
  font-weight: 500;
}
.botons {
  display: flex;
  align-items: center;
  gap: 10px;
}

.resume {
  position: relative;
  font-size: 1.2em;
  padding: 0.7em 1.4em;
  background-color: var(--beige);
  text-decoration: none;
  border: none;
  border-radius: 0.5em;
  color: var(--dark-color);
  box-shadow: 0.5em 0.5em 0.5em var(--dark-color);
  cursor: pointer;
}

.resume::before {
  position: absolute;
  content: "";
  height: 0;
  width: 0;
  top: 0;
  left: 0;
  background: linear-gradient(
    135deg,
    var(--dark-color),
    var(--dark-color),
    var(--beige),
    var(--beige)
  );
  border-radius: 0 0 0.5em 0;
  box-shadow: 0.2em 0.2em 0.2em rgba(0, 0, 0, 0.3);
  transition: 0.3s;
}

.resume:hover::before {
  width: 1.6em;
  height: 1.6em;
}

.resume:active {
  box-shadow: 0.2em 0.2em 0.3em var(--dark-color);
  transform: translate(0.1em, 0.1em);
}
.contact {
  font-family: inherit;
  font-size: 20px;
  background: var(--beige);
  color: var(--dark-color);
  padding: 0.7em 1em;
  padding-left: 0.9em;
  display: flex;
  align-items: center;
  border: none;
  border-radius: 16px;
  overflow: hidden;
  transition: all 0.2s;
  cursor: pointer;
  text-decoration: none;
}

.contact span {
  display: block;
  margin-left: 0.3em;
  transition: all 0.3s ease-in-out;
}

.contact svg {
  display: block;
  transform-origin: center center;
  transition: transform 0.3s ease-in-out;
}

.contact:hover .svg-wrapper {
  animation: fly-1 0.6s ease-in-out infinite alternate;
}

.contact:hover svg {
  transform: translateX(1.2em) rotate(45deg) scale(1.1);
}

.contact:hover span {
  transform: translateX(5em);
}

.contact:active {
  transform: scale(0.95);
}

@keyframes fly-1 {
  from {
    transform: translateY(0.1em);
  }

  to {
    transform: translateY(-0.1em);
  }
}
